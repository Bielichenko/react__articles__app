{"version":3,"sources":["store/articleSlice.ts","store/index.ts","hook.ts","components/ArticleCard/ArticleCard1.tsx","components/Catalog/Catalog.tsx","components/Filter/Filter.tsx","components/SelectedArticle/SelectedArticle.tsx","App.tsx","index.tsx"],"names":["articleSlice","createSlice","name","initialState","list","selectedArticle","userInput","reducers","setArticles","state","action","payload","setSelectedArticle","setUserInput","actions","store","configureStore","reducer","articles","articleReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","ArticleCard","article","dispatch","className","src","imageUrl","alt","publishedAt","id","highlightClassName","searchWords","autoEscape","textToHighlight","title","summary","type","onClick","Catalog","useEffect","fetch","then","res","json","data","console","log","map","Filter","value","onChange","e","userInputParam","target","SelectedArticle","useState","isClosing","setIsClosing","cn","setTimeout","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71320e94.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\n\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IArticleCard } from '../types/IArticleCard';\n\ntype ArticlesState = {\n  list: IArticleCard[];\n  selectedArticle: IArticleCard | null;\n  userInput: string;\n};\n\nconst initialState: ArticlesState = {\n  list: [],\n  selectedArticle: null,\n  userInput: '',\n};\n\nconst articleSlice = createSlice({\n  name: 'articles',\n  initialState,\n  reducers: {\n    setArticles(state, action: PayloadAction<IArticleCard[]>) {\n      state.list = action.payload;\n    },\n    setSelectedArticle(state, action:PayloadAction<IArticleCard | null>) {\n      state.selectedArticle = action.payload;\n    },\n    setUserInput(state, action:PayloadAction<string>) {\n      state.userInput = action.payload;\n    },\n  },\n});\n\nexport const { setArticles, setSelectedArticle, setUserInput } = articleSlice.actions;\n\nexport default articleSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport articleReducer from './articleSlice';\n\nconst store = configureStore({\n  reducer: {\n    articles: articleReducer,\n  },\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { useDispatch, useSelector, TypedUseSelectorHook } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/*eslint-disable*/\n\nimport React, {useEffect} from \"react\";\n// import { createRoot } from \"react-dom/client\";\nimport Highlighter from \"react-highlight-words\";\nimport { useAppDispatch, useAppSelector } from '../../hook';\nimport { setArticles, setSelectedArticle } from '../../store/articleSlice';\nimport { IArticleCard } from '../../types/IArticleCard';\n\nimport './ArticleCard.scss';\n\ninterface props {\n  article: IArticleCard,\n}\n\n\nexport const ArticleCard: React.FC<props> = ({ article}) => {\n  const dispatch = useAppDispatch();\n  const userInput = useAppSelector(state => state.articles.userInput)\n  // const selectedArticle = useAppSelector(state => state.articles.selectedArticle);\n\n  \n  const articleSelectionHandler = () => {\n    dispatch(setSelectedArticle(article));\n    // console.log(selectedArticle, 'selectedArticle');\n  };\n\n  return (\n    <article className=\"articleCard\">\n      <img\n        src={article.imageUrl}\n        alt=\"img\"\n        className=\"articleCard__image\"\n      />\n      <p className=\"articleCard__date\">{article.publishedAt}</p>\n      {/* <h4 className=\"articleCard__title\" id=\"title\">\n        {article.title}\n      </h4> */}\n      <h4 className=\"articleCard__title\" id=\"title\">\n      <Highlighter\n          highlightClassName=\"YourHighlightClass\"\n          searchWords={[userInput]}\n          autoEscape={true}\n          textToHighlight={article.title}\n        />\n      </h4>\n      \n      {/* <p className=\"articleCard__description\">{article.summary}</p> */}\n      \n      <p className=\"articleCard__description\">\n      <Highlighter\n          highlightClassName=\"YourHighlightClass\"\n          searchWords={[userInput]}\n          autoEscape={true}\n          textToHighlight={article.summary}\n        />\n      </p>\n      <button type=\"button\" className=\"articleCard__link\" onClick={() => articleSelectionHandler()}>read more</button>\n    </article>\n  );\n};\n","/*eslint-disable*/\n\nimport React, { useState, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hook';\nimport { setArticles, setSelectedArticle } from '../../store/articleSlice';\nimport { IArticleCard } from '../../types/IArticleCard';\nimport { ArticleCard } from '../ArticleCard/ArticleCard1';\n\nimport './Catalog.scss'\n\nconst URL = 'https://api.spaceflightnewsapi.net/v3/articles/';\n\nexport const Catalog = () => {\n  const dispatch = useAppDispatch();\n  const articles = useAppSelector(state => state.articles.list)\n   const selectedArticle = useAppSelector(state => state.articles.selectedArticle);\n\n\n  useEffect(() => {\n    fetch(URL)\n\t.then(res => res.json())\n  .then(data => dispatch(setArticles(data)))\n  }, [])\n\n  useEffect(() => {\n    console.log(articles, 'articles')\n  })\n\n  useEffect(() => {\n    console.log(selectedArticle, 'selectedArticle')\n  })\n\n  return (\n    <ul className=\"articles\">\n      {articles.map((article:IArticleCard)=> {\n        return(\n          <li className=\"articles__gridCell\" key={article.id}>\n            <ArticleCard article={article} />\n          </li>\n        )\n      })}\n    </ul>    \n  )\n}","/*eslint-disable*/\n\nimport React, { useState, useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../hook';\nimport { setUserInput } from '../../store/articleSlice';\n\nexport const Filter = () => {\n  const dispatch = useAppDispatch();\n  const userInput = useAppSelector(state => state.articles.userInput);\n\n\n  let title: HTMLElement | null = null\n\n  const inputHandler = (userInputParam: string) => {\n    dispatch(setUserInput(userInputParam));\n  }\n\n    return (\n      <div className=\"filter\">\n        <input className=\"filter__input\" type=\"\" value={userInput} onChange={(e) => {inputHandler(e.target.value)}}/>\n      </div>\n    )\n}\n","/*eslint-disable*/\n\nimport React, { useState } from 'react'\nimport cn from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../hook';\nimport { setSelectedArticle } from '../../store/articleSlice';\n\nimport './SelectedArticle.scss';\n\nexport const SelectedArticle = () => {\n  const [isClosing, setIsClosing] = useState(false);\n\n  const dispatch = useAppDispatch();\n  const selectedArticle = useAppSelector(state => state.articles.selectedArticle)\n\n  const closeArticleHandler = () => {\n    setIsClosing(true);\n    setTimeout(setIsClosing, 700, false)\n    setTimeout(dispatch, 700, setSelectedArticle(null))\n  }\n\n  return (\n       selectedArticle \n    ? (\n    <article className={cn(\"selectedArticle\", {\"selectedArticle--isClosing\": isClosing})}>\n    <img\n      src={selectedArticle.imageUrl}\n      alt=\"img\"\n      className=\"selectedArticle__image\"\n    />\n    <p className=\"selectedArticle__date\">{selectedArticle.publishedAt}</p>\n    <h4 className=\"selectedArticle__title\">\n      {selectedArticle.title}\n    </h4>\n    <p className=\"selectedArticle__description\">{selectedArticle.summary}</p>\n    <button type=\"button\" className=\"selectedArticle__link\" onClick={() => closeArticleHandler()}>Back to homepage</button>\n  </article> \n    )\n    : null\n    )\n}","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.scss';\nimport cn from 'classnames';\nimport { Catalog } from './components/Catalog/Catalog';\nimport { Filter } from './components/Filter/Filter';\nimport { SelectedArticle } from './components/SelectedArticle/SelectedArticle';\nimport { useAppSelector } from './hook';\n\nexport const App: React.FC = () => {\n  const selectedArticle = useAppSelector(state => state.articles.selectedArticle);\n\n  return (\n    <div className={cn('app', { 'app--dislpayArticle': selectedArticle })}>\n      <Filter />\n      <Catalog />\n      <SelectedArticle />\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}